<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span> <span class="hljs-built_in">recv_internal</span><span class="hljs-symbol">(</span><span class="hljs-type">int</span> msg_value<span class="hljs-symbol">,</span> <span class="hljs-type">cell</span> in_msg_cell<span class="hljs-symbol">,</span> <span class="hljs-type">slice</span> in_msg<span class="hljs-symbol">)</span> <span class="hljs-keyword">impure</span> <span class="hljs-symbol">{</span>
  <span class="hljs-keyword">var</span> cs <span class="hljs-symbol">=</span> in_msg_cell.begin_parse<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">var</span> flags <span class="hljs-symbol">=</span> cs<span class="hljs-symbol">~</span>load_uint<span class="hljs-symbol">(</span><span class="hljs-number">4</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>  <span class="hljs-comment">;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool</span>
  <span class="hljs-keyword">if</span> <span class="hljs-symbol">(</span>flags <span class="hljs-symbol">&amp;</span> <span class="hljs-number">1</span><span class="hljs-symbol">)</span> <span class="hljs-symbol">{</span>
    <span class="hljs-comment">;; ignore all bounced messages</span>
    <span class="hljs-keyword">return</span> <span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-symbol">}</span>
  <span class="hljs-keyword">if</span> <span class="hljs-symbol">(</span>in_msg.slice_bits<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span> <span class="hljs-symbol">&lt;</span> <span class="hljs-number">32</span><span class="hljs-symbol">)</span> <span class="hljs-symbol">{</span>
    <span class="hljs-comment">;; ignore simple transfers</span>
    <span class="hljs-keyword">return</span> <span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-symbol">}</span>
  <span class="hljs-type">int</span> op <span class="hljs-symbol">=</span> in_msg<span class="hljs-symbol">~</span>load_uint<span class="hljs-symbol">(</span><span class="hljs-number">32</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">if</span> <span class="hljs-symbol">(</span>op !<span class="hljs-symbol">=</span> <span class="hljs-number">0x706c7567</span><span class="hljs-symbol">)</span> <span class="hljs-symbol">&amp;</span> <span class="hljs-symbol">(</span>op !<span class="hljs-symbol">=</span> <span class="hljs-number">0x64737472</span><span class="hljs-symbol">)</span> <span class="hljs-symbol">{</span> <span class="hljs-comment">;; &quot;plug&quot; &amp; &quot;dstr&quot;</span>
    <span class="hljs-comment">;; ignore all messages not related to plugins</span>
    <span class="hljs-keyword">return</span> <span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-symbol">}</span>
  <span class="hljs-type">slice</span> s_addr <span class="hljs-symbol">=</span> cs<span class="hljs-symbol">~</span>load_msg_addr<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-symbol">(</span><span class="hljs-type">int</span> wc<span class="hljs-symbol">,</span> <span class="hljs-type">int</span> addr_hash<span class="hljs-symbol">)</span> <span class="hljs-symbol">=</span> parse_std_addr<span class="hljs-symbol">(</span>s_addr<span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-type">slice</span> wc_n_address <span class="hljs-symbol">=</span> begin_cell<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span>.store_int<span class="hljs-symbol">(</span>wc<span class="hljs-symbol">,</span> <span class="hljs-number">8</span><span class="hljs-symbol">)</span>.store_uint<span class="hljs-symbol">(</span>addr_hash<span class="hljs-symbol">,</span> <span class="hljs-number">256</span><span class="hljs-symbol">)</span>.end_cell<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span>.begin_parse<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">var</span> ds <span class="hljs-symbol">=</span> get_data<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span>.begin_parse<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span>.skip_bits<span class="hljs-symbol">(</span><span class="hljs-number">32</span> <span class="hljs-symbol">+</span> <span class="hljs-number">32</span> <span class="hljs-symbol">+</span> <span class="hljs-number">256</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">var</span> plugins <span class="hljs-symbol">=</span> ds<span class="hljs-symbol">~</span>load_dict<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">var</span> <span class="hljs-symbol">(</span>_<span class="hljs-symbol">,</span> success?<span class="hljs-symbol">)</span> <span class="hljs-symbol">=</span> plugins.dict_get?<span class="hljs-symbol">(</span><span class="hljs-number">8</span> <span class="hljs-symbol">+</span> <span class="hljs-number">256</span><span class="hljs-symbol">,</span> wc_n_address<span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">if</span> <span class="hljs-symbol">~</span><span class="hljs-symbol">(</span>success?<span class="hljs-symbol">)</span> <span class="hljs-symbol">{</span>
    <span class="hljs-comment">;; it may be a transfer</span>
    <span class="hljs-keyword">return</span> <span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-symbol">}</span>
  <span class="hljs-type">int</span> query_id <span class="hljs-symbol">=</span> in_msg<span class="hljs-symbol">~</span>load_uint<span class="hljs-symbol">(</span><span class="hljs-number">64</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">var</span> msg <span class="hljs-symbol">=</span> begin_cell<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
  <span class="hljs-keyword">if</span> <span class="hljs-symbol">(</span>op <span class="hljs-symbol">=</span><span class="hljs-symbol">=</span> <span class="hljs-number">0x706c7567</span><span class="hljs-symbol">)</span> <span class="hljs-symbol">{</span> <span class="hljs-comment">;; request funds</span>

    <span class="hljs-symbol">(</span><span class="hljs-type">int</span> r_toncoins<span class="hljs-symbol">,</span> <span class="hljs-type">cell</span> r_extra<span class="hljs-symbol">)</span> <span class="hljs-symbol">=</span> <span class="hljs-symbol">(</span>in_msg<span class="hljs-symbol">~</span>load_grams<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">,</span> in_msg<span class="hljs-symbol">~</span>load_dict<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>

    <span class="hljs-symbol">[</span><span class="hljs-type">int</span> my_balance<span class="hljs-symbol">,</span> _<span class="hljs-symbol">]</span> <span class="hljs-symbol">=</span> get_balance<span class="hljs-symbol">(</span><span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
    <span class="hljs-keyword">throw_unless</span><span class="hljs-symbol">(</span><span class="hljs-number">80</span><span class="hljs-symbol">,</span> my_balance <span class="hljs-symbol">-</span> msg_value <span class="hljs-symbol">&gt;</span><span class="hljs-symbol">=</span> r_toncoins<span class="hljs-symbol">)</span><span class="hljs-symbol">;</span>
